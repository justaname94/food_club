upstream food_club_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server web:8000 fail_timeout=0;
}

server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    server_name foodtec.xyz;   # substitute by your FQDN and machine's IP address

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        return 301 https://$host$request_uri;
        # proxy_pass http://food_club_server;
        # proxy_set_header Host $http_host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 443 ssl;
    server_name foodtec.xyz;
    charset     utf-8;

    #Max upload size
    client_max_body_size 75M;   # adjust to taste

    ssl_certificate /etc/letsencrypt/live/foodtec.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/foodtec.xyz/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Django media
    # location /media  {
        # alias /media;      # your Django project's media files
    # }
# 
    # location /static {
        # alias /static;     # your Django project's static files
    # }

    location / {
        proxy_pass http://foodtec.xyz; # for demo purposes
    }
}

